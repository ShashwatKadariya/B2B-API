// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// todo reset password token 

model User {
  id String @id @default(cuid())
  username String
  email String @unique
  password String
  emailVerified Boolean @default(false)

  refreshTokens RefreshToken[]
  emailVerificationToken EmailVerificationToken[] 

  role Role[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Role {
  id String @id @default(cuid())

  roleName String @unique

  user User[] 
  permission Permission[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("role")
}

model Permission {
  id String @id @default(cuid())

  scope String @unique
  role Role[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("permission")
}


model RefreshToken {
  id String @id @default(cuid())
  token String @unique

  user User @relation(fields: [userId], references: [id])
  userId String 
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("refreshToken")
}


model EmailVerificationToken {
  id String @id @default(cuid())
  token String @unique

  expiresAt DateTime
  user User @relation(fields: [userId], references: [id])
  userId String 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  @@map("emailVerificationToken")

}